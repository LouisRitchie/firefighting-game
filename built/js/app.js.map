{"version":3,"sources":["app/game.coffee","app/initialize.coffee","app/state.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApfile":"built/js/app.js","sourcesContent":["var assets, game, state;\n\nstate = require('state');\n\ngame = new Rogue.Game({\n  fps: true,\n  width: 800,\n  height: 600\n});\n\ngame.input = new Rogue.Keyboard(game.canvas);\n\ngame.mouse = new Rogue.Mouse(game);\n\ngame.assets = assets = new Rogue.AssetManager({\n  baseUrl: \"\",\n  packs: {\n    core: [\n      {\n        name: \"bg1\",\n        src: \"img/b1.png\"\n      }, {\n        name: \"bg2\",\n        src: \"img/b2.png\"\n      }, {\n        name: \"red\",\n        src: \"img/1.png\"\n      }, {\n        name: \"blue\",\n        src: \"img/2.png\"\n      }, {\n        name: \"jump\",\n        src: \"sound/jump.ogg\",\n        alt: \"sound/jump.mp3\"\n      }\n    ]\n  },\n  preload: false\n});\n\nassets.on(\"load\", \"core\", function(asset, percent) {\n  return console.log(\"Assets loading: \" + percent);\n});\n\nassets.on(\"complete\", \"core\", function() {\n  console.log(\"Assets loaded\");\n  return game.start(state);\n});\n\nassets.download(\"core\");\n\nmodule.exports = game;\n","\nRogue.ready(function() {\n  return window.game = require('game');\n});\n","var PLAYER_JUMP_ACC, PLAYER_SPEED, state;\n\nPLAYER_SPEED = 6;\n\nPLAYER_JUMP_ACC = -40;\n\nstate = {\n  setup: function(game) {\n    var assets, bg1, bg2, tiles, x, _i, _ref, _results;\n    console.log(\"setup run\");\n    assets = game.assets.core;\n    this.viewport = new Rogue.ViewPort({\n      parent: game,\n      viewWidth: 1000,\n      viewHeight: 400\n    });\n    bg1 = new Rogue.Entity({\n      name: \"bg1\",\n      image: assets.bg1,\n      speed: 0.5,\n      repeatX: true,\n      require: [\"layer\"]\n    });\n    bg2 = new Rogue.Entity({\n      name: \"bg2\",\n      image: assets.bg2,\n      speed: 0.9,\n      repeatX: true,\n      require: [\"layer\"]\n    });\n    game.player = new Rogue.Entity({\n      name: \"player\",\n      image: assets.blue,\n      require: [\"move\", \"collide\", \"AABB\", \"physics\"]\n    });\n    game.player.behavior.add(\"gravity\");\n    game.player.ev.on(\"hit\", function(col) {\n      if (col.dir === \"bottom\") {\n        return this.canJump = true;\n      }\n    });\n    tiles = new Rogue.TileMap({\n      name: \"tiles\",\n      y: 300,\n      size: [30, 1]\n    });\n    this.viewport.add([bg2, bg1, game.player, tiles]);\n    this.viewport.updates.push(function() {\n      this.follow(this.player);\n      return this.forceInside(this.player, false);\n    });\n    _results = [];\n    for (x = _i = 0, _ref = this.viewport.tiles.size[0]; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {\n      _results.push(this.viewport.tiles.place(new Rogue.Entity({\n        image: assets.red,\n        x: x,\n        y: 0,\n        require: [\"sprite\", \"collide\", \"AABB\"]\n      })));\n    }\n    return _results;\n  },\n  update: function(game, dt) {\n    var input, player;\n    player = game.player;\n    input = game.input;\n    if (input.pressed(\"right\")) {\n      player.move(PLAYER_SPEED, 0);\n    }\n    if (input.pressed(\"left\")) {\n      player.move(-PLAYER_SPEED, 0);\n    }\n    if (input.pressed(\"up\")) {\n      if (player.canJump) {\n        player.canJump = false;\n        player.acc[1] = PLAYER_JUMP_ACC;\n      }\n    }\n    if (input.pressed(\"down\")) {\n      player.move(0, 2);\n    }\n    return this.viewport.update(dt);\n  },\n  draw: function(game, dt) {\n    game.clear();\n    return this.viewport.draw();\n  }\n};\n\nmodule.exports = state;\n"]}